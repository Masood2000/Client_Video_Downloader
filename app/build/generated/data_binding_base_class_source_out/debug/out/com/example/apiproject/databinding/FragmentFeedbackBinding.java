// Generated by view binder compiler. Do not edit!
package com.example.apiproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.apiproject.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFeedbackBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Chip chip1;

  @NonNull
  public final Chip chip2;

  @NonNull
  public final Chip chip3;

  @NonNull
  public final Chip chip4;

  @NonNull
  public final Chip chip5;

  @NonNull
  public final Chip chip8;

  @NonNull
  public final ChipGroup problemsChipGroup;

  @NonNull
  public final AppCompatEditText problemsDescription;

  @NonNull
  public final TextView problemsText;

  @NonNull
  public final MaterialButton submitButton;

  private FragmentFeedbackBinding(@NonNull ConstraintLayout rootView, @NonNull Chip chip1,
      @NonNull Chip chip2, @NonNull Chip chip3, @NonNull Chip chip4, @NonNull Chip chip5,
      @NonNull Chip chip8, @NonNull ChipGroup problemsChipGroup,
      @NonNull AppCompatEditText problemsDescription, @NonNull TextView problemsText,
      @NonNull MaterialButton submitButton) {
    this.rootView = rootView;
    this.chip1 = chip1;
    this.chip2 = chip2;
    this.chip3 = chip3;
    this.chip4 = chip4;
    this.chip5 = chip5;
    this.chip8 = chip8;
    this.problemsChipGroup = problemsChipGroup;
    this.problemsDescription = problemsDescription;
    this.problemsText = problemsText;
    this.submitButton = submitButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFeedbackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFeedbackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_feedback, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFeedbackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chip1;
      Chip chip1 = ViewBindings.findChildViewById(rootView, id);
      if (chip1 == null) {
        break missingId;
      }

      id = R.id.chip2;
      Chip chip2 = ViewBindings.findChildViewById(rootView, id);
      if (chip2 == null) {
        break missingId;
      }

      id = R.id.chip3;
      Chip chip3 = ViewBindings.findChildViewById(rootView, id);
      if (chip3 == null) {
        break missingId;
      }

      id = R.id.chip4;
      Chip chip4 = ViewBindings.findChildViewById(rootView, id);
      if (chip4 == null) {
        break missingId;
      }

      id = R.id.chip5;
      Chip chip5 = ViewBindings.findChildViewById(rootView, id);
      if (chip5 == null) {
        break missingId;
      }

      id = R.id.chip8;
      Chip chip8 = ViewBindings.findChildViewById(rootView, id);
      if (chip8 == null) {
        break missingId;
      }

      id = R.id.problems_chip_group;
      ChipGroup problemsChipGroup = ViewBindings.findChildViewById(rootView, id);
      if (problemsChipGroup == null) {
        break missingId;
      }

      id = R.id.problems_description;
      AppCompatEditText problemsDescription = ViewBindings.findChildViewById(rootView, id);
      if (problemsDescription == null) {
        break missingId;
      }

      id = R.id.problems_text;
      TextView problemsText = ViewBindings.findChildViewById(rootView, id);
      if (problemsText == null) {
        break missingId;
      }

      id = R.id.submit_button;
      MaterialButton submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      return new FragmentFeedbackBinding((ConstraintLayout) rootView, chip1, chip2, chip3, chip4,
          chip5, chip8, problemsChipGroup, problemsDescription, problemsText, submitButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
