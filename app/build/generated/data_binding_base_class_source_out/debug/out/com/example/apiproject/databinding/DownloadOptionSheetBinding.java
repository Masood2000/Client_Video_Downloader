// Generated by view binder compiler. Do not edit!
package com.example.apiproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.apiproject.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DownloadOptionSheetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView cancel;

  @NonNull
  public final MaterialButton download;

  @NonNull
  public final TextView heading;

  @NonNull
  public final ImageFilterView imageFilterView;

  @NonNull
  public final RecyclerView rc;

  @NonNull
  public final CardView sheetStorageCard;

  @NonNull
  public final LinearProgressIndicator sheetStorageProgress;

  @NonNull
  public final TextView sheetTvStorage;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView5;

  private DownloadOptionSheetBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView cancel,
      @NonNull MaterialButton download, @NonNull TextView heading,
      @NonNull ImageFilterView imageFilterView, @NonNull RecyclerView rc,
      @NonNull CardView sheetStorageCard, @NonNull LinearProgressIndicator sheetStorageProgress,
      @NonNull TextView sheetTvStorage, @NonNull TextView textView, @NonNull TextView textView5) {
    this.rootView = rootView;
    this.cancel = cancel;
    this.download = download;
    this.heading = heading;
    this.imageFilterView = imageFilterView;
    this.rc = rc;
    this.sheetStorageCard = sheetStorageCard;
    this.sheetStorageProgress = sheetStorageProgress;
    this.sheetTvStorage = sheetTvStorage;
    this.textView = textView;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DownloadOptionSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DownloadOptionSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.download_option_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DownloadOptionSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel;
      ImageView cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.download;
      MaterialButton download = ViewBindings.findChildViewById(rootView, id);
      if (download == null) {
        break missingId;
      }

      id = R.id.heading;
      TextView heading = ViewBindings.findChildViewById(rootView, id);
      if (heading == null) {
        break missingId;
      }

      id = R.id.imageFilterView;
      ImageFilterView imageFilterView = ViewBindings.findChildViewById(rootView, id);
      if (imageFilterView == null) {
        break missingId;
      }

      id = R.id.rc;
      RecyclerView rc = ViewBindings.findChildViewById(rootView, id);
      if (rc == null) {
        break missingId;
      }

      id = R.id.sheet_storage_card;
      CardView sheetStorageCard = ViewBindings.findChildViewById(rootView, id);
      if (sheetStorageCard == null) {
        break missingId;
      }

      id = R.id.sheet_storage_progress;
      LinearProgressIndicator sheetStorageProgress = ViewBindings.findChildViewById(rootView, id);
      if (sheetStorageProgress == null) {
        break missingId;
      }

      id = R.id.sheet_tv_storage;
      TextView sheetTvStorage = ViewBindings.findChildViewById(rootView, id);
      if (sheetTvStorage == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new DownloadOptionSheetBinding((ConstraintLayout) rootView, cancel, download, heading,
          imageFilterView, rc, sheetStorageCard, sheetStorageProgress, sheetTvStorage, textView,
          textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
