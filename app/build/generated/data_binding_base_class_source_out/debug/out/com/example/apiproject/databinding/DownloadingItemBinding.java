// Generated by view binder compiler. Do not edit!
package com.example.apiproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.apiproject.R;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DownloadingItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView delete;

  @NonNull
  public final TextView details;

  @NonNull
  public final ImageFilterView image;

  @NonNull
  public final TextView state;

  @NonNull
  public final TextView type;

  @NonNull
  public final LinearProgressIndicator videoProgress;

  @NonNull
  public final TextView videoTitle;

  private DownloadingItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView delete,
      @NonNull TextView details, @NonNull ImageFilterView image, @NonNull TextView state,
      @NonNull TextView type, @NonNull LinearProgressIndicator videoProgress,
      @NonNull TextView videoTitle) {
    this.rootView = rootView;
    this.delete = delete;
    this.details = details;
    this.image = image;
    this.state = state;
    this.type = type;
    this.videoProgress = videoProgress;
    this.videoTitle = videoTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DownloadingItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DownloadingItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.downloading_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DownloadingItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete;
      ImageView delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.details;
      TextView details = ViewBindings.findChildViewById(rootView, id);
      if (details == null) {
        break missingId;
      }

      id = R.id.image;
      ImageFilterView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.state;
      TextView state = ViewBindings.findChildViewById(rootView, id);
      if (state == null) {
        break missingId;
      }

      id = R.id.type;
      TextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      id = R.id.videoProgress;
      LinearProgressIndicator videoProgress = ViewBindings.findChildViewById(rootView, id);
      if (videoProgress == null) {
        break missingId;
      }

      id = R.id.video_title;
      TextView videoTitle = ViewBindings.findChildViewById(rootView, id);
      if (videoTitle == null) {
        break missingId;
      }

      return new DownloadingItemBinding((ConstraintLayout) rootView, delete, details, image, state,
          type, videoProgress, videoTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
