// Generated by view binder compiler. Do not edit!
package com.example.apiproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.apiproject.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clDailymotion;

  @NonNull
  public final ConstraintLayout clFb;

  @NonNull
  public final ConstraintLayout clGoogle;

  @NonNull
  public final ConstraintLayout clInsta;

  @NonNull
  public final ConstraintLayout clPin;

  @NonNull
  public final ConstraintLayout clReddit;

  @NonNull
  public final ConstraintLayout clSuggestedApps;

  @NonNull
  public final ConstraintLayout clTwitch;

  @NonNull
  public final ConstraintLayout clVimeo;

  @NonNull
  public final ConstraintLayout clYoutube;

  @NonNull
  public final ImageView clear;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final MaterialButton downloadbutton;

  @NonNull
  public final TextView heading;

  @NonNull
  public final ImageView icDailymotion;

  @NonNull
  public final ImageView icFb;

  @NonNull
  public final ImageView icGoogle;

  @NonNull
  public final ImageView icInsta;

  @NonNull
  public final ImageView icPin;

  @NonNull
  public final ImageView icReddit;

  @NonNull
  public final ImageView icTwitch;

  @NonNull
  public final ImageView icVimeo;

  @NonNull
  public final ImageView icYoutube;

  @NonNull
  public final TextView instructions;

  @NonNull
  public final EditText linkfield;

  @NonNull
  public final NestedScrollView nsvHome;

  @NonNull
  public final MaterialButton pasteText;

  @NonNull
  public final MaterialCardView section1;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout clDailymotion, @NonNull ConstraintLayout clFb,
      @NonNull ConstraintLayout clGoogle, @NonNull ConstraintLayout clInsta,
      @NonNull ConstraintLayout clPin, @NonNull ConstraintLayout clReddit,
      @NonNull ConstraintLayout clSuggestedApps, @NonNull ConstraintLayout clTwitch,
      @NonNull ConstraintLayout clVimeo, @NonNull ConstraintLayout clYoutube,
      @NonNull ImageView clear, @NonNull ConstraintLayout constraintLayout2,
      @NonNull MaterialButton downloadbutton, @NonNull TextView heading,
      @NonNull ImageView icDailymotion, @NonNull ImageView icFb, @NonNull ImageView icGoogle,
      @NonNull ImageView icInsta, @NonNull ImageView icPin, @NonNull ImageView icReddit,
      @NonNull ImageView icTwitch, @NonNull ImageView icVimeo, @NonNull ImageView icYoutube,
      @NonNull TextView instructions, @NonNull EditText linkfield,
      @NonNull NestedScrollView nsvHome, @NonNull MaterialButton pasteText,
      @NonNull MaterialCardView section1) {
    this.rootView = rootView;
    this.clDailymotion = clDailymotion;
    this.clFb = clFb;
    this.clGoogle = clGoogle;
    this.clInsta = clInsta;
    this.clPin = clPin;
    this.clReddit = clReddit;
    this.clSuggestedApps = clSuggestedApps;
    this.clTwitch = clTwitch;
    this.clVimeo = clVimeo;
    this.clYoutube = clYoutube;
    this.clear = clear;
    this.constraintLayout2 = constraintLayout2;
    this.downloadbutton = downloadbutton;
    this.heading = heading;
    this.icDailymotion = icDailymotion;
    this.icFb = icFb;
    this.icGoogle = icGoogle;
    this.icInsta = icInsta;
    this.icPin = icPin;
    this.icReddit = icReddit;
    this.icTwitch = icTwitch;
    this.icVimeo = icVimeo;
    this.icYoutube = icYoutube;
    this.instructions = instructions;
    this.linkfield = linkfield;
    this.nsvHome = nsvHome;
    this.pasteText = pasteText;
    this.section1 = section1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cl_dailymotion;
      ConstraintLayout clDailymotion = ViewBindings.findChildViewById(rootView, id);
      if (clDailymotion == null) {
        break missingId;
      }

      id = R.id.cl_fb;
      ConstraintLayout clFb = ViewBindings.findChildViewById(rootView, id);
      if (clFb == null) {
        break missingId;
      }

      id = R.id.cl_google;
      ConstraintLayout clGoogle = ViewBindings.findChildViewById(rootView, id);
      if (clGoogle == null) {
        break missingId;
      }

      id = R.id.cl_insta;
      ConstraintLayout clInsta = ViewBindings.findChildViewById(rootView, id);
      if (clInsta == null) {
        break missingId;
      }

      id = R.id.cl_pin;
      ConstraintLayout clPin = ViewBindings.findChildViewById(rootView, id);
      if (clPin == null) {
        break missingId;
      }

      id = R.id.cl_reddit;
      ConstraintLayout clReddit = ViewBindings.findChildViewById(rootView, id);
      if (clReddit == null) {
        break missingId;
      }

      id = R.id.cl_suggested_apps;
      ConstraintLayout clSuggestedApps = ViewBindings.findChildViewById(rootView, id);
      if (clSuggestedApps == null) {
        break missingId;
      }

      id = R.id.cl_twitch;
      ConstraintLayout clTwitch = ViewBindings.findChildViewById(rootView, id);
      if (clTwitch == null) {
        break missingId;
      }

      id = R.id.cl_vimeo;
      ConstraintLayout clVimeo = ViewBindings.findChildViewById(rootView, id);
      if (clVimeo == null) {
        break missingId;
      }

      id = R.id.cl_youtube;
      ConstraintLayout clYoutube = ViewBindings.findChildViewById(rootView, id);
      if (clYoutube == null) {
        break missingId;
      }

      id = R.id.clear;
      ImageView clear = ViewBindings.findChildViewById(rootView, id);
      if (clear == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.downloadbutton;
      MaterialButton downloadbutton = ViewBindings.findChildViewById(rootView, id);
      if (downloadbutton == null) {
        break missingId;
      }

      id = R.id.heading;
      TextView heading = ViewBindings.findChildViewById(rootView, id);
      if (heading == null) {
        break missingId;
      }

      id = R.id.ic_dailymotion;
      ImageView icDailymotion = ViewBindings.findChildViewById(rootView, id);
      if (icDailymotion == null) {
        break missingId;
      }

      id = R.id.ic_fb;
      ImageView icFb = ViewBindings.findChildViewById(rootView, id);
      if (icFb == null) {
        break missingId;
      }

      id = R.id.ic_google;
      ImageView icGoogle = ViewBindings.findChildViewById(rootView, id);
      if (icGoogle == null) {
        break missingId;
      }

      id = R.id.ic_insta;
      ImageView icInsta = ViewBindings.findChildViewById(rootView, id);
      if (icInsta == null) {
        break missingId;
      }

      id = R.id.ic_pin;
      ImageView icPin = ViewBindings.findChildViewById(rootView, id);
      if (icPin == null) {
        break missingId;
      }

      id = R.id.ic_reddit;
      ImageView icReddit = ViewBindings.findChildViewById(rootView, id);
      if (icReddit == null) {
        break missingId;
      }

      id = R.id.ic_twitch;
      ImageView icTwitch = ViewBindings.findChildViewById(rootView, id);
      if (icTwitch == null) {
        break missingId;
      }

      id = R.id.ic_vimeo;
      ImageView icVimeo = ViewBindings.findChildViewById(rootView, id);
      if (icVimeo == null) {
        break missingId;
      }

      id = R.id.ic_youtube;
      ImageView icYoutube = ViewBindings.findChildViewById(rootView, id);
      if (icYoutube == null) {
        break missingId;
      }

      id = R.id.instructions;
      TextView instructions = ViewBindings.findChildViewById(rootView, id);
      if (instructions == null) {
        break missingId;
      }

      id = R.id.linkfield;
      EditText linkfield = ViewBindings.findChildViewById(rootView, id);
      if (linkfield == null) {
        break missingId;
      }

      id = R.id.nsv_home;
      NestedScrollView nsvHome = ViewBindings.findChildViewById(rootView, id);
      if (nsvHome == null) {
        break missingId;
      }

      id = R.id.pasteText;
      MaterialButton pasteText = ViewBindings.findChildViewById(rootView, id);
      if (pasteText == null) {
        break missingId;
      }

      id = R.id.section_1;
      MaterialCardView section1 = ViewBindings.findChildViewById(rootView, id);
      if (section1 == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, clDailymotion, clFb, clGoogle,
          clInsta, clPin, clReddit, clSuggestedApps, clTwitch, clVimeo, clYoutube, clear,
          constraintLayout2, downloadbutton, heading, icDailymotion, icFb, icGoogle, icInsta, icPin,
          icReddit, icTwitch, icVimeo, icYoutube, instructions, linkfield, nsvHome, pasteText,
          section1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
