// Generated by Dagger (https://dagger.dev).
package com.example.apiproject.domain.viewmodels;

import com.example.apiproject.data.database.dao.DownloadedVideoDao;
import com.example.apiproject.data.database.dao.DownloadingVideoDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MainActivityViewModel_Factory implements Factory<MainActivityViewModel> {
  private final Provider<DownloadingVideoDao> downloadingVideoDaoProvider;

  private final Provider<DownloadedVideoDao> downloadedVideoDaoProvider;

  public MainActivityViewModel_Factory(Provider<DownloadingVideoDao> downloadingVideoDaoProvider,
      Provider<DownloadedVideoDao> downloadedVideoDaoProvider) {
    this.downloadingVideoDaoProvider = downloadingVideoDaoProvider;
    this.downloadedVideoDaoProvider = downloadedVideoDaoProvider;
  }

  @Override
  public MainActivityViewModel get() {
    return newInstance(downloadingVideoDaoProvider.get(), downloadedVideoDaoProvider.get());
  }

  public static MainActivityViewModel_Factory create(
      Provider<DownloadingVideoDao> downloadingVideoDaoProvider,
      Provider<DownloadedVideoDao> downloadedVideoDaoProvider) {
    return new MainActivityViewModel_Factory(downloadingVideoDaoProvider, downloadedVideoDaoProvider);
  }

  public static MainActivityViewModel newInstance(DownloadingVideoDao downloadingVideoDao,
      DownloadedVideoDao downloadedVideoDao) {
    return new MainActivityViewModel(downloadingVideoDao, downloadedVideoDao);
  }
}
