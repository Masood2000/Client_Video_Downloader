// Generated by Dagger (https://dagger.dev).
package com.example.apiproject.data.di;

import com.example.apiproject.data.database.dao.DownloadedVideoDao;
import com.example.apiproject.domain.db.AppDb;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideDownloadedVideoDaoFactory implements Factory<DownloadedVideoDao> {
  private final Provider<AppDb> appDatabaseProvider;

  public AppModule_ProvideDownloadedVideoDaoFactory(Provider<AppDb> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public DownloadedVideoDao get() {
    return provideDownloadedVideoDao(appDatabaseProvider.get());
  }

  public static AppModule_ProvideDownloadedVideoDaoFactory create(
      Provider<AppDb> appDatabaseProvider) {
    return new AppModule_ProvideDownloadedVideoDaoFactory(appDatabaseProvider);
  }

  public static DownloadedVideoDao provideDownloadedVideoDao(AppDb appDatabase) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideDownloadedVideoDao(appDatabase));
  }
}
